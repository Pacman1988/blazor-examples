@page "/virtualize"
<a href="https://www.daveabrock.com/2020/10/20/blazor-component-virtualization/" target="_blank">https://www.daveabrock.com/2020/10/20/blazor-component-virtualization/</a>
@*<h4>Slow normal call</h4>

@if (cars == null)
{
    <p><em>Loading so many cars...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Cost</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var car in cars)
            {
                <tr>
                    <td>@car.Id</td>
                    <td>@car.Name</td>
                    <td>@car.Cost</td>
                </tr>
            }
        </tbody>
    </table>
}*@


<h4>Virtualized</h4>
<Virtualize Items="cars" Context="car">
    <tr>
        <td>@car.Id</td>
        <td>@car.Name</td>
        <td>@car.Cost</td>
    </tr>
</Virtualize>

@code {
    private List<Car> cars = new();

    protected override async Task OnInitializedAsync()
    {
        cars = await MakeTenThousandCars();
    }

    private async Task<List<Car>> MakeTenThousandCars()
    {
        List<Car> myCarList = new List<Car>();

        for (int i = 0; i < 10000; i++)
        {
            var car = new Car()
                {
                    Id = Guid.NewGuid(),
                    Name = $"Car {i}",
                    Cost = i * 100
                };

            myCarList.Add(car);
        }
        return await Task.FromResult(myCarList);
    }

    public class Car
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = "";
        public int Cost { get; set; }
    }
}
